import NewMessageModel from '../models/new-message.model';import PostModel from '../models/post.model';import ReplyModel from "../models/reply.model";import SubReplyModel from "../models/sub-reply.model";interface returnValInter {    state: boolean;    message: string;    data?: any;}interface newMessageInter {    ID: number;    post_id: number;    type: string;    reply_id: number;    user_id: number;}export default class NewMessageController {    // 获取当前用户未读信息    static async getList(req, res): Promise<returnValInter> {        if (req.session.user && req.session.user[0]) {            const userId = parseInt(req.session.user[0].ID);            const row = await NewMessageModel.getList(userId);            for (let i = 0; i < (<newMessageInter[]>row).length; i++) {                const currentMessage = row[i];                currentMessage.post_ifo = await PostModel.getDetails(currentMessage.post_id);                currentMessage.reply_ifo = await ReplyModel.getDetails(currentMessage.reply_id);                currentMessage.sub_reply_ifo = await SubReplyModel.getDetails(currentMessage.sub_reply_id);            }            return {                state: true,                message: '未读信息',                data: row            }        } else {            return {                state: false,                message: '请登录'            }        }    }    // 已阅    static async deleteOne(req, res): Promise<returnValInter> {        if (req.session.user && req.session.user[0]) {            const messageId = req.body.messageId;            const result = await NewMessageModel.deleteOne(messageId);            if (result) {                return {                    state: true,                    message: '已阅'                }            } else {                return {                    state: false,                    message: '已阅失败'                }            }        } else {            return {                state: false,                message: '请登录'            }        }    }}